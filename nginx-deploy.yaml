# nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
# nginx-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy
spec:
  selector:
    app: nginx-reverse-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: userapi-ingress
  namespace: default
spec:
  rules:
  - host: userapi.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-reverse-proxy
            port:
              number: 80
  - host: movieapi.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-reverse-proxy
            port:
              number: 80
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: userapi-ingress
  namespace: default
spec:
  rules:
  - host: userapi.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-reverse-proxy
            port:
              number: 80
- host: movieapi.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-reverse-proxy
            port:
              number: 80


# nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;

    events {
      worker_connections 1000;
    }

    http {
      server {
        listen 80;

        location /userapi/ {
          proxy_pass http://userapi-service:5005;
        }

        location /movieapi/ {
          proxy_pass http://movieapi-service:5005;
        }
      }
    }
